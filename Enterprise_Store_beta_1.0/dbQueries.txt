
#region nameAndSum
    var nameAndSum = db.Personnels
            .Select(per => new
            {
                per.PersonnelName,

                realForEachProd = per.Realizations
                .Where(r => r.Date >= date && r.Date <= date2)
                    .Select(real => new
                    {
                        r = real.RealizationPriceQties.Select(p => p.Product.ProductName),
                        sum = real.RealizationPriceQties.Select(q => q.PriceSelling * (decimal)q.Quantity).Sum()
                    }),

                sumForEachRealization = per.Realizations // сумма каждой реализации
                .Where(r => r.Date >= date && r.Date <= date2)
                .Select(real => real.RealizationPriceQties.Select(q => q.PriceSelling * (decimal)q.Quantity)
                .Sum()),

                sumAllRealization = per.Realizations // сумма всех реализаций
                .Where(r => r.Date >= date && r.Date <= date2)
                .SelectMany(real => real.RealizationPriceQties)
                .Sum(rpq => (decimal)rpq.Quantity * rpq.PriceSelling)
            })

            .ToList();
#endregion

#region nameAndSum2 GroupBy //сумма всех продаж за период и з.п.
            //var sumAllRealizationAndSalary = db.RealizationPriceQtys
            //    .Where(r => r.Realization.Date >= date && r.Realization.Date <= date2)
            //    .GroupBy(el => el.Realization.PersonnelsPersonnel.PersonnelName)//группируем все проданные товары по PersonnelName

            //    .Select(g => new
            //    {
            //        persName = g.Key,
            //        sumRealization = g.Select(r => r.PriceSelling * (decimal)r.Quantity).Sum(),
            //        theSalary = g.Select(r => r.PriceSelling * (decimal)r.Quantity).Sum() * (decimal)0.05
            //    })
            //    .ToList();
#endregion

#region nameAndSum3 //отчёт о продаже каждого товара
            //var nameAndSum3 = db.Personnels
            //    .SelectMany(p => p.Realizations.SelectMany(r => r.RealizationPriceQties))
            //    .Select(rpq => new
            //    {
            //        rpq.Realization.PersonnelsPersonnel.PersonnelName,
            //        rpq.Product.ProductName,
            //        rpq.PriceSelling,
            //        rpq.Quantity,
            //        total = rpq.PriceSelling * (decimal)rpq.Quantity
            //    })
            //    .ToList();
#endregion
#region // Отчёт о продажах и начисление зп queryReportSalesForEachPersonnel

            ////var date = new DateTime(2021, 08, 11); // r.Date >= date  
            ////var date2 = new DateTime(2021, 08, 12) + new TimeSpan(23, 59, 59); // r.Date <= date2

            ////using Db_Enterprise_Store_Context db = new();
            //double percentPerSale = 0.05; //доля от суммы продаж
            //var queryReportSalesForEachPersonnel = db.Personnels
            //    .Select(per => new
            //    {
            //        per.PersonnelId, // id персонала
            //        per.PersonnelName, // имя персонала

            //        realizationForEachProduct = per.Realizations //реализация по каждому товару
            //            .Where(r => r.Date >= date && r.Date <= date2) // за период
            //            .SelectMany(r => r.RealizationPriceQties)
            //            .Select(rpq => new
            //            {
            //                rpq.Realization.PersonnelsPersonnel.PersonnelId,
            //                rpq.Realization.PersonnelsPersonnel.PersonnelName,

            //                Product_Name = rpq.Product.ProductName,
            //                rpq.PriceSelling,
            //                rpq.Quantity,
            //                totalForEachProduct = rpq.PriceSelling * (decimal)rpq.Quantity,

            //                sumAllRealizations = per.Realizations //сумма продаж 
            //                .Where(r => r.Date >= date && r.Date <= date2) // на период
            //                .SelectMany(r => r.RealizationPriceQties.Select(rpq => rpq.PriceSelling * (decimal)rpq.Quantity)).Sum(),

            //                theSalary = per.Realizations // процент от продаж з.п. сотрудника
            //                .Where(r => r.Date >= date && r.Date <= date2)
            //                .SelectMany(r => r.RealizationPriceQties
            //                    .Select(rpq => rpq.PriceSelling * (decimal)rpq.Quantity)).Sum() * (decimal)percentPerSale,

            //            }).ToList()
            //    }).ToList();

            //dataGridView1.ColumnCount = 4;
            //dataGridView1.Rows.Add("Дата:", "от " + date, "по " + date2);

            //dataGridView1.ReadOnly = true;
            //for (int i = 0; i < queryReportSalesForEachPersonnel.Count; i++)
            //{
            //    var item = queryReportSalesForEachPersonnel[i];
            //    if (item.realizationForEachProduct.Count() == 0)
            //    {
            //        continue;
            //    }

            //    var idAndNamePersonnel = string.Format("{0} {1}", item.PersonnelId, item.PersonnelName);
            //    var sumAllRealizations = string.Format("{0:C2}", item.realizationForEachProduct[0].sumAllRealizations);
            //    var theSalary = string.Format("{0:C2}", item.realizationForEachProduct[0].theSalary);

            //    int idx = dataGridView1.Rows.Add(idAndNamePersonnel); // вставка строки код и имя сотрудника
            //    dataGridView1.Rows[idx].DefaultCellStyle.Font = new Font(this.Font, FontStyle.Bold);
            //    foreach (var product in item.realizationForEachProduct)
            //    {
            //        dataGridView1.Rows.Insert(idx + 1, product.Product_Name,
            //                                         string.Format("{0:C2}", product.PriceSelling),
            //                                         product.Quantity,
            //                                         string.Format("{0:C2}", product.totalForEachProduct));
            //    }

            //    idx = dataGridView1.Rows.Add("Начислено 5% от продаж:", theSalary, "Сумма продаж:", sumAllRealizations); // вставка строки код и имя сотрудника
            //    dataGridView1.Rows[idx].DefaultCellStyle.Font = new Font(this.Font, FontStyle.Bold);
            //}
#endregion
#region nameAndSum5
            //double percentPerSale2 = 0.05; //доля от суммы продаж
            //var nameAndSum5 = db.Personnels
            //    .SelectMany(per => per.Realizations //реализация по каждому товару
            //        .Where(r => r.Date >= date && r.Date <= date2) // за период
            //        .SelectMany(r => r.RealizationPriceQties)
            //        .Select(rpq => new
            //        {
            //            rpq.Realization.PersonnelsPersonnel.PersonnelId,
            //            rpq.Realization.PersonnelsPersonnel.PersonnelName,

            //            Product_Name = rpq.Product.ProductName,
            //            rpq.PriceSelling,
            //            rpq.Quantity,
            //            totalForEachProduct = rpq.PriceSelling * (decimal)rpq.Quantity,

            //            sumAllRealizations = per.Realizations //сумма продаж 
            //            .Where(r => r.Date >= date && r.Date <= date2) // на период
            //            .SelectMany(r => r.RealizationPriceQties.Select(rpq => rpq.PriceSelling * (decimal)rpq.Quantity)).Sum(),

            //            theSalary = per.Realizations // процент от продаж з.п. сотрудника
            //            .Where(r => r.Date >= date && r.Date <= date2)
            //            .SelectMany(r => r.RealizationPriceQties
            //                .Select(rpq => rpq.PriceSelling * (decimal)rpq.Quantity)).Sum() * (decimal)percentPerSale2,

            //        })).ToList();
#endregion
